"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import sys
import typing

import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2

if sys.version_info >= (3, 10):
    pass
else:
    pass

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class PDecimalValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SCALE_FIELD_NUMBER: builtins.int
    PRECISION_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    scale: builtins.int
    precision: builtins.int
    value: builtins.bytes
    def __init__(
        self,
        *,
        scale: builtins.int = ...,
        precision: builtins.int = ...,
        value: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "precision", b"precision", "scale", b"scale", "value", b"value"
        ],
    ) -> None: ...

global___PDecimalValue = PDecimalValue

@typing.final
class PAnyValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NULL_FIELD_NUMBER: builtins.int
    STRING_FIELD_NUMBER: builtins.int
    INT32_FIELD_NUMBER: builtins.int
    INT64_FIELD_NUMBER: builtins.int
    DOUBLE_FIELD_NUMBER: builtins.int
    BOOL_FIELD_NUMBER: builtins.int
    MAP_FIELD_NUMBER: builtins.int
    null: google.protobuf.struct_pb2.NullValue.ValueType
    string: builtins.str
    int32: builtins.int
    int64: builtins.int
    double: builtins.float
    bool: builtins.bool
    @property
    def map(self) -> global___PMap: ...
    def __init__(
        self,
        *,
        null: google.protobuf.struct_pb2.NullValue.ValueType = ...,
        string: builtins.str = ...,
        int32: builtins.int = ...,
        int64: builtins.int = ...,
        double: builtins.float = ...,
        bool: builtins.bool = ...,
        map: global___PMap | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "bool",
            b"bool",
            "double",
            b"double",
            "int32",
            b"int32",
            "int64",
            b"int64",
            "kind",
            b"kind",
            "map",
            b"map",
            "null",
            b"null",
            "string",
            b"string",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "bool",
            b"bool",
            "double",
            b"double",
            "int32",
            b"int32",
            "int64",
            b"int64",
            "kind",
            b"kind",
            "map",
            b"map",
            "null",
            b"null",
            "string",
            b"string",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["kind", b"kind"]
    ) -> (
        typing.Literal["null", "string", "int32", "int64", "double", "bool", "map"]
        | None
    ): ...

global___PAnyValue = PAnyValue

@typing.final
class PKeyValue(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    key: builtins.str
    @property
    def value(self) -> global___PAnyValue: ...
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        value: global___PAnyValue | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["value", b"value"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing.Literal["key", b"key", "value", b"value"]
    ) -> None: ...

global___PKeyValue = PKeyValue

@typing.final
class PMap(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENTRIES_FIELD_NUMBER: builtins.int
    @property
    def entries(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PKeyValue
    ]: ...
    def __init__(
        self,
        *,
        entries: collections.abc.Iterable[global___PKeyValue] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["entries", b"entries"]) -> None: ...

global___PMap = PMap

@typing.final
class PHistoricalPrice(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATE_FIELD_NUMBER: builtins.int
    CLOSE_FIELD_NUMBER: builtins.int
    date: builtins.int
    """epoch day, based on the epoch 1970-01-01"""
    close: builtins.int
    def __init__(
        self,
        *,
        date: builtins.int = ...,
        close: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["close", b"close", "date", b"date"]
    ) -> None: ...

global___PHistoricalPrice = PHistoricalPrice

@typing.final
class PFullHistoricalPrice(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATE_FIELD_NUMBER: builtins.int
    CLOSE_FIELD_NUMBER: builtins.int
    HIGH_FIELD_NUMBER: builtins.int
    LOW_FIELD_NUMBER: builtins.int
    VOLUME_FIELD_NUMBER: builtins.int
    date: builtins.int
    """epoch day, based on the epoch 1970-01-01"""
    close: builtins.int
    high: builtins.int
    low: builtins.int
    volume: builtins.int
    def __init__(
        self,
        *,
        date: builtins.int = ...,
        close: builtins.int = ...,
        high: builtins.int = ...,
        low: builtins.int = ...,
        volume: builtins.int = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "close",
            b"close",
            "date",
            b"date",
            "high",
            b"high",
            "low",
            b"low",
            "volume",
            b"volume",
        ],
    ) -> None: ...

global___PFullHistoricalPrice = PFullHistoricalPrice

@typing.final
class PSecurityEvent(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        type V = ValueType

    class _TypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            PSecurityEvent._Type.ValueType
        ],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        STOCK_SPLIT: PSecurityEvent._Type.ValueType  # 0
        NOTE: PSecurityEvent._Type.ValueType  # 1
        DIVIDEND_PAYMENT: PSecurityEvent._Type.ValueType  # 2

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    STOCK_SPLIT: PSecurityEvent.Type.ValueType  # 0
    NOTE: PSecurityEvent.Type.ValueType  # 1
    DIVIDEND_PAYMENT: PSecurityEvent.Type.ValueType  # 2

    TYPE_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    type: global___PSecurityEvent.Type.ValueType
    date: builtins.int
    """epoch day"""
    details: builtins.str
    source: builtins.str
    @property
    def data(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PAnyValue
    ]: ...
    def __init__(
        self,
        *,
        type: global___PSecurityEvent.Type.ValueType = ...,
        date: builtins.int = ...,
        details: builtins.str = ...,
        data: collections.abc.Iterable[global___PAnyValue] | None = ...,
        source: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "data",
            b"data",
            "date",
            b"date",
            "details",
            b"details",
            "source",
            b"source",
            "type",
            b"type",
        ],
    ) -> None: ...

global___PSecurityEvent = PSecurityEvent

@typing.final
class PSecurity(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UUID_FIELD_NUMBER: builtins.int
    ONLINEID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CURRENCYCODE_FIELD_NUMBER: builtins.int
    TARGETCURRENCYCODE_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    ISIN_FIELD_NUMBER: builtins.int
    TICKERSYMBOL_FIELD_NUMBER: builtins.int
    WKN_FIELD_NUMBER: builtins.int
    CALENDAR_FIELD_NUMBER: builtins.int
    FEED_FIELD_NUMBER: builtins.int
    FEEDURL_FIELD_NUMBER: builtins.int
    PRICES_FIELD_NUMBER: builtins.int
    LATESTFEED_FIELD_NUMBER: builtins.int
    LATESTFEEDURL_FIELD_NUMBER: builtins.int
    LATEST_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    EVENTS_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    ISRETIRED_FIELD_NUMBER: builtins.int
    UPDATEDAT_FIELD_NUMBER: builtins.int
    uuid: builtins.str
    onlineId: builtins.str
    name: builtins.str
    currencyCode: builtins.str
    targetCurrencyCode: builtins.str
    note: builtins.str
    isin: builtins.str
    tickerSymbol: builtins.str
    wkn: builtins.str
    calendar: builtins.str
    feed: builtins.str
    feedURL: builtins.str
    latestFeed: builtins.str
    latestFeedURL: builtins.str
    isRetired: builtins.bool
    @property
    def prices(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PHistoricalPrice
    ]: ...
    @property
    def latest(self) -> global___PFullHistoricalPrice: ...
    @property
    def attributes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PKeyValue
    ]: ...
    @property
    def events(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PSecurityEvent
    ]: ...
    @property
    def properties(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PKeyValue
    ]: ...
    @property
    def updatedAt(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        uuid: builtins.str = ...,
        onlineId: builtins.str | None = ...,
        name: builtins.str = ...,
        currencyCode: builtins.str | None = ...,
        targetCurrencyCode: builtins.str | None = ...,
        note: builtins.str | None = ...,
        isin: builtins.str | None = ...,
        tickerSymbol: builtins.str | None = ...,
        wkn: builtins.str | None = ...,
        calendar: builtins.str | None = ...,
        feed: builtins.str | None = ...,
        feedURL: builtins.str | None = ...,
        prices: collections.abc.Iterable[global___PHistoricalPrice] | None = ...,
        latestFeed: builtins.str | None = ...,
        latestFeedURL: builtins.str | None = ...,
        latest: global___PFullHistoricalPrice | None = ...,
        attributes: collections.abc.Iterable[global___PKeyValue] | None = ...,
        events: collections.abc.Iterable[global___PSecurityEvent] | None = ...,
        properties: collections.abc.Iterable[global___PKeyValue] | None = ...,
        isRetired: builtins.bool = ...,
        updatedAt: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_calendar",
            b"_calendar",
            "_currencyCode",
            b"_currencyCode",
            "_feed",
            b"_feed",
            "_feedURL",
            b"_feedURL",
            "_isin",
            b"_isin",
            "_latest",
            b"_latest",
            "_latestFeed",
            b"_latestFeed",
            "_latestFeedURL",
            b"_latestFeedURL",
            "_note",
            b"_note",
            "_onlineId",
            b"_onlineId",
            "_targetCurrencyCode",
            b"_targetCurrencyCode",
            "_tickerSymbol",
            b"_tickerSymbol",
            "_wkn",
            b"_wkn",
            "calendar",
            b"calendar",
            "currencyCode",
            b"currencyCode",
            "feed",
            b"feed",
            "feedURL",
            b"feedURL",
            "isin",
            b"isin",
            "latest",
            b"latest",
            "latestFeed",
            b"latestFeed",
            "latestFeedURL",
            b"latestFeedURL",
            "note",
            b"note",
            "onlineId",
            b"onlineId",
            "targetCurrencyCode",
            b"targetCurrencyCode",
            "tickerSymbol",
            b"tickerSymbol",
            "updatedAt",
            b"updatedAt",
            "wkn",
            b"wkn",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_calendar",
            b"_calendar",
            "_currencyCode",
            b"_currencyCode",
            "_feed",
            b"_feed",
            "_feedURL",
            b"_feedURL",
            "_isin",
            b"_isin",
            "_latest",
            b"_latest",
            "_latestFeed",
            b"_latestFeed",
            "_latestFeedURL",
            b"_latestFeedURL",
            "_note",
            b"_note",
            "_onlineId",
            b"_onlineId",
            "_targetCurrencyCode",
            b"_targetCurrencyCode",
            "_tickerSymbol",
            b"_tickerSymbol",
            "_wkn",
            b"_wkn",
            "attributes",
            b"attributes",
            "calendar",
            b"calendar",
            "currencyCode",
            b"currencyCode",
            "events",
            b"events",
            "feed",
            b"feed",
            "feedURL",
            b"feedURL",
            "isRetired",
            b"isRetired",
            "isin",
            b"isin",
            "latest",
            b"latest",
            "latestFeed",
            b"latestFeed",
            "latestFeedURL",
            b"latestFeedURL",
            "name",
            b"name",
            "note",
            b"note",
            "onlineId",
            b"onlineId",
            "prices",
            b"prices",
            "properties",
            b"properties",
            "targetCurrencyCode",
            b"targetCurrencyCode",
            "tickerSymbol",
            b"tickerSymbol",
            "updatedAt",
            b"updatedAt",
            "uuid",
            b"uuid",
            "wkn",
            b"wkn",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_calendar", b"_calendar"]
    ) -> typing.Literal["calendar"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_currencyCode", b"_currencyCode"]
    ) -> typing.Literal["currencyCode"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_feed", b"_feed"]
    ) -> typing.Literal["feed"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_feedURL", b"_feedURL"]
    ) -> typing.Literal["feedURL"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_isin", b"_isin"]
    ) -> typing.Literal["isin"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_latest", b"_latest"]
    ) -> typing.Literal["latest"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_latestFeed", b"_latestFeed"]
    ) -> typing.Literal["latestFeed"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_latestFeedURL", b"_latestFeedURL"]
    ) -> typing.Literal["latestFeedURL"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_note", b"_note"]
    ) -> typing.Literal["note"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_onlineId", b"_onlineId"]
    ) -> typing.Literal["onlineId"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_targetCurrencyCode", b"_targetCurrencyCode"]
    ) -> typing.Literal["targetCurrencyCode"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_tickerSymbol", b"_tickerSymbol"]
    ) -> typing.Literal["tickerSymbol"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_wkn", b"_wkn"]
    ) -> typing.Literal["wkn"] | None: ...

global___PSecurity = PSecurity

@typing.final
class PWatchlist(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SECURITIES_FIELD_NUMBER: builtins.int
    name: builtins.str
    @property
    def securities(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Uuids"""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        securities: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["name", b"name", "securities", b"securities"]
    ) -> None: ...

global___PWatchlist = PWatchlist

@typing.final
class PAccount(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UUID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CURRENCYCODE_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    ISRETIRED_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    UPDATEDAT_FIELD_NUMBER: builtins.int
    uuid: builtins.str
    name: builtins.str
    currencyCode: builtins.str
    note: builtins.str
    isRetired: builtins.bool
    @property
    def attributes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PKeyValue
    ]: ...
    @property
    def updatedAt(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        uuid: builtins.str = ...,
        name: builtins.str = ...,
        currencyCode: builtins.str = ...,
        note: builtins.str | None = ...,
        isRetired: builtins.bool = ...,
        attributes: collections.abc.Iterable[global___PKeyValue] | None = ...,
        updatedAt: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_note", b"_note", "note", b"note", "updatedAt", b"updatedAt"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_note",
            b"_note",
            "attributes",
            b"attributes",
            "currencyCode",
            b"currencyCode",
            "isRetired",
            b"isRetired",
            "name",
            b"name",
            "note",
            b"note",
            "updatedAt",
            b"updatedAt",
            "uuid",
            b"uuid",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["_note", b"_note"]
    ) -> typing.Literal["note"] | None: ...

global___PAccount = PAccount

@typing.final
class PPortfolio(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UUID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    ISRETIRED_FIELD_NUMBER: builtins.int
    REFERENCEACCOUNT_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    UPDATEDAT_FIELD_NUMBER: builtins.int
    uuid: builtins.str
    name: builtins.str
    note: builtins.str
    isRetired: builtins.bool
    referenceAccount: builtins.str
    @property
    def attributes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PKeyValue
    ]: ...
    @property
    def updatedAt(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        uuid: builtins.str = ...,
        name: builtins.str = ...,
        note: builtins.str | None = ...,
        isRetired: builtins.bool = ...,
        referenceAccount: builtins.str | None = ...,
        attributes: collections.abc.Iterable[global___PKeyValue] | None = ...,
        updatedAt: google.protobuf.timestamp_pb2.Timestamp | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_note",
            b"_note",
            "_referenceAccount",
            b"_referenceAccount",
            "note",
            b"note",
            "referenceAccount",
            b"referenceAccount",
            "updatedAt",
            b"updatedAt",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_note",
            b"_note",
            "_referenceAccount",
            b"_referenceAccount",
            "attributes",
            b"attributes",
            "isRetired",
            b"isRetired",
            "name",
            b"name",
            "note",
            b"note",
            "referenceAccount",
            b"referenceAccount",
            "updatedAt",
            b"updatedAt",
            "uuid",
            b"uuid",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_note", b"_note"]
    ) -> typing.Literal["note"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_referenceAccount", b"_referenceAccount"]
    ) -> typing.Literal["referenceAccount"] | None: ...

global___PPortfolio = PPortfolio

@typing.final
class PTransactionUnit(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        type V = ValueType

    class _TypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            PTransactionUnit._Type.ValueType
        ],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        GROSS_VALUE: PTransactionUnit._Type.ValueType  # 0
        TAX: PTransactionUnit._Type.ValueType  # 1
        FEE: PTransactionUnit._Type.ValueType  # 2

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    GROSS_VALUE: PTransactionUnit.Type.ValueType  # 0
    TAX: PTransactionUnit.Type.ValueType  # 1
    FEE: PTransactionUnit.Type.ValueType  # 2

    TYPE_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    CURRENCYCODE_FIELD_NUMBER: builtins.int
    FXAMOUNT_FIELD_NUMBER: builtins.int
    FXCURRENCYCODE_FIELD_NUMBER: builtins.int
    FXRATETOBASE_FIELD_NUMBER: builtins.int
    type: global___PTransactionUnit.Type.ValueType
    amount: builtins.int
    currencyCode: builtins.str
    fxAmount: builtins.int
    fxCurrencyCode: builtins.str
    @property
    def fxRateToBase(self) -> global___PDecimalValue: ...
    def __init__(
        self,
        *,
        type: global___PTransactionUnit.Type.ValueType = ...,
        amount: builtins.int = ...,
        currencyCode: builtins.str = ...,
        fxAmount: builtins.int | None = ...,
        fxCurrencyCode: builtins.str | None = ...,
        fxRateToBase: global___PDecimalValue | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_fxAmount",
            b"_fxAmount",
            "_fxCurrencyCode",
            b"_fxCurrencyCode",
            "_fxRateToBase",
            b"_fxRateToBase",
            "fxAmount",
            b"fxAmount",
            "fxCurrencyCode",
            b"fxCurrencyCode",
            "fxRateToBase",
            b"fxRateToBase",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_fxAmount",
            b"_fxAmount",
            "_fxCurrencyCode",
            b"_fxCurrencyCode",
            "_fxRateToBase",
            b"_fxRateToBase",
            "amount",
            b"amount",
            "currencyCode",
            b"currencyCode",
            "fxAmount",
            b"fxAmount",
            "fxCurrencyCode",
            b"fxCurrencyCode",
            "fxRateToBase",
            b"fxRateToBase",
            "type",
            b"type",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_fxAmount", b"_fxAmount"]
    ) -> typing.Literal["fxAmount"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_fxCurrencyCode", b"_fxCurrencyCode"]
    ) -> typing.Literal["fxCurrencyCode"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_fxRateToBase", b"_fxRateToBase"]
    ) -> typing.Literal["fxRateToBase"] | None: ...

global___PTransactionUnit = PTransactionUnit

@typing.final
class PTransaction(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        type V = ValueType

    class _TypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            PTransaction._Type.ValueType
        ],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        PURCHASE: PTransaction._Type.ValueType  # 0
        SALE: PTransaction._Type.ValueType  # 1
        INBOUND_DELIVERY: PTransaction._Type.ValueType  # 2
        OUTBOUND_DELIVERY: PTransaction._Type.ValueType  # 3
        SECURITY_TRANSFER: PTransaction._Type.ValueType  # 4
        CASH_TRANSFER: PTransaction._Type.ValueType  # 5
        DEPOSIT: PTransaction._Type.ValueType  # 6
        REMOVAL: PTransaction._Type.ValueType  # 7
        DIVIDEND: PTransaction._Type.ValueType  # 8
        INTEREST: PTransaction._Type.ValueType  # 9
        INTEREST_CHARGE: PTransaction._Type.ValueType  # 10
        TAX: PTransaction._Type.ValueType  # 11
        TAX_REFUND: PTransaction._Type.ValueType  # 12
        FEE: PTransaction._Type.ValueType  # 13
        FEE_REFUND: PTransaction._Type.ValueType  # 14

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    PURCHASE: PTransaction.Type.ValueType  # 0
    SALE: PTransaction.Type.ValueType  # 1
    INBOUND_DELIVERY: PTransaction.Type.ValueType  # 2
    OUTBOUND_DELIVERY: PTransaction.Type.ValueType  # 3
    SECURITY_TRANSFER: PTransaction.Type.ValueType  # 4
    CASH_TRANSFER: PTransaction.Type.ValueType  # 5
    DEPOSIT: PTransaction.Type.ValueType  # 6
    REMOVAL: PTransaction.Type.ValueType  # 7
    DIVIDEND: PTransaction.Type.ValueType  # 8
    INTEREST: PTransaction.Type.ValueType  # 9
    INTEREST_CHARGE: PTransaction.Type.ValueType  # 10
    TAX: PTransaction.Type.ValueType  # 11
    TAX_REFUND: PTransaction.Type.ValueType  # 12
    FEE: PTransaction.Type.ValueType  # 13
    FEE_REFUND: PTransaction.Type.ValueType  # 14

    UUID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    ACCOUNT_FIELD_NUMBER: builtins.int
    PORTFOLIO_FIELD_NUMBER: builtins.int
    OTHERACCOUNT_FIELD_NUMBER: builtins.int
    OTHERPORTFOLIO_FIELD_NUMBER: builtins.int
    OTHERUUID_FIELD_NUMBER: builtins.int
    OTHERUPDATEDAT_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    CURRENCYCODE_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    SHARES_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    SECURITY_FIELD_NUMBER: builtins.int
    UNITS_FIELD_NUMBER: builtins.int
    UPDATEDAT_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    uuid: builtins.str
    type: global___PTransaction.Type.ValueType
    account: builtins.str
    portfolio: builtins.str
    otherAccount: builtins.str
    otherPortfolio: builtins.str
    otherUuid: builtins.str
    currencyCode: builtins.str
    amount: builtins.int
    shares: builtins.int
    note: builtins.str
    security: builtins.str
    source: builtins.str
    @property
    def otherUpdatedAt(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def date(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def units(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PTransactionUnit
    ]: ...
    @property
    def updatedAt(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        uuid: builtins.str = ...,
        type: global___PTransaction.Type.ValueType = ...,
        account: builtins.str | None = ...,
        portfolio: builtins.str | None = ...,
        otherAccount: builtins.str | None = ...,
        otherPortfolio: builtins.str | None = ...,
        otherUuid: builtins.str | None = ...,
        otherUpdatedAt: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        date: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        currencyCode: builtins.str = ...,
        amount: builtins.int = ...,
        shares: builtins.int | None = ...,
        note: builtins.str | None = ...,
        security: builtins.str | None = ...,
        units: collections.abc.Iterable[global___PTransactionUnit] | None = ...,
        updatedAt: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        source: builtins.str | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_account",
            b"_account",
            "_note",
            b"_note",
            "_otherAccount",
            b"_otherAccount",
            "_otherPortfolio",
            b"_otherPortfolio",
            "_otherUpdatedAt",
            b"_otherUpdatedAt",
            "_otherUuid",
            b"_otherUuid",
            "_portfolio",
            b"_portfolio",
            "_security",
            b"_security",
            "_shares",
            b"_shares",
            "_source",
            b"_source",
            "account",
            b"account",
            "date",
            b"date",
            "note",
            b"note",
            "otherAccount",
            b"otherAccount",
            "otherPortfolio",
            b"otherPortfolio",
            "otherUpdatedAt",
            b"otherUpdatedAt",
            "otherUuid",
            b"otherUuid",
            "portfolio",
            b"portfolio",
            "security",
            b"security",
            "shares",
            b"shares",
            "source",
            b"source",
            "updatedAt",
            b"updatedAt",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_account",
            b"_account",
            "_note",
            b"_note",
            "_otherAccount",
            b"_otherAccount",
            "_otherPortfolio",
            b"_otherPortfolio",
            "_otherUpdatedAt",
            b"_otherUpdatedAt",
            "_otherUuid",
            b"_otherUuid",
            "_portfolio",
            b"_portfolio",
            "_security",
            b"_security",
            "_shares",
            b"_shares",
            "_source",
            b"_source",
            "account",
            b"account",
            "amount",
            b"amount",
            "currencyCode",
            b"currencyCode",
            "date",
            b"date",
            "note",
            b"note",
            "otherAccount",
            b"otherAccount",
            "otherPortfolio",
            b"otherPortfolio",
            "otherUpdatedAt",
            b"otherUpdatedAt",
            "otherUuid",
            b"otherUuid",
            "portfolio",
            b"portfolio",
            "security",
            b"security",
            "shares",
            b"shares",
            "source",
            b"source",
            "type",
            b"type",
            "units",
            b"units",
            "updatedAt",
            b"updatedAt",
            "uuid",
            b"uuid",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_account", b"_account"]
    ) -> typing.Literal["account"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_note", b"_note"]
    ) -> typing.Literal["note"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_otherAccount", b"_otherAccount"]
    ) -> typing.Literal["otherAccount"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_otherPortfolio", b"_otherPortfolio"]
    ) -> typing.Literal["otherPortfolio"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_otherUpdatedAt", b"_otherUpdatedAt"]
    ) -> typing.Literal["otherUpdatedAt"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_otherUuid", b"_otherUuid"]
    ) -> typing.Literal["otherUuid"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_portfolio", b"_portfolio"]
    ) -> typing.Literal["portfolio"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_security", b"_security"]
    ) -> typing.Literal["security"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_shares", b"_shares"]
    ) -> typing.Literal["shares"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_source", b"_source"]
    ) -> typing.Literal["source"] | None: ...

global___PTransaction = PTransaction

@typing.final
class PInvestmentPlan(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        type V = ValueType

    class _TypeEnumTypeWrapper(
        google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[
            PInvestmentPlan._Type.ValueType
        ],
        builtins.type,
    ):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        PURCHASE_OR_DELIVERY: PInvestmentPlan._Type.ValueType  # 0
        DEPOSIT: PInvestmentPlan._Type.ValueType  # 1
        REMOVAL: PInvestmentPlan._Type.ValueType  # 2
        INTEREST: PInvestmentPlan._Type.ValueType  # 3

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    PURCHASE_OR_DELIVERY: PInvestmentPlan.Type.ValueType  # 0
    DEPOSIT: PInvestmentPlan.Type.ValueType  # 1
    REMOVAL: PInvestmentPlan.Type.ValueType  # 2
    INTEREST: PInvestmentPlan.Type.ValueType  # 3

    NAME_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    SECURITY_FIELD_NUMBER: builtins.int
    PORTFOLIO_FIELD_NUMBER: builtins.int
    ACCOUNT_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    AUTOGENERATE_FIELD_NUMBER: builtins.int
    DATE_FIELD_NUMBER: builtins.int
    INTERVAL_FIELD_NUMBER: builtins.int
    AMOUNT_FIELD_NUMBER: builtins.int
    FEES_FIELD_NUMBER: builtins.int
    TRANSACTIONS_FIELD_NUMBER: builtins.int
    TAXES_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    note: builtins.str
    security: builtins.str
    portfolio: builtins.str
    account: builtins.str
    autoGenerate: builtins.bool
    date: builtins.int
    interval: builtins.int
    amount: builtins.int
    fees: builtins.int
    taxes: builtins.int
    type: global___PInvestmentPlan.Type.ValueType
    @property
    def attributes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PKeyValue
    ]: ...
    @property
    def transactions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Uuids"""

    def __init__(
        self,
        *,
        name: builtins.str = ...,
        note: builtins.str | None = ...,
        security: builtins.str | None = ...,
        portfolio: builtins.str | None = ...,
        account: builtins.str | None = ...,
        attributes: collections.abc.Iterable[global___PKeyValue] | None = ...,
        autoGenerate: builtins.bool = ...,
        date: builtins.int = ...,
        interval: builtins.int = ...,
        amount: builtins.int = ...,
        fees: builtins.int = ...,
        transactions: collections.abc.Iterable[builtins.str] | None = ...,
        taxes: builtins.int = ...,
        type: global___PInvestmentPlan.Type.ValueType = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_account",
            b"_account",
            "_note",
            b"_note",
            "_portfolio",
            b"_portfolio",
            "_security",
            b"_security",
            "account",
            b"account",
            "note",
            b"note",
            "portfolio",
            b"portfolio",
            "security",
            b"security",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_account",
            b"_account",
            "_note",
            b"_note",
            "_portfolio",
            b"_portfolio",
            "_security",
            b"_security",
            "account",
            b"account",
            "amount",
            b"amount",
            "attributes",
            b"attributes",
            "autoGenerate",
            b"autoGenerate",
            "date",
            b"date",
            "fees",
            b"fees",
            "interval",
            b"interval",
            "name",
            b"name",
            "note",
            b"note",
            "portfolio",
            b"portfolio",
            "security",
            b"security",
            "taxes",
            b"taxes",
            "transactions",
            b"transactions",
            "type",
            b"type",
        ],
    ) -> None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_account", b"_account"]
    ) -> typing.Literal["account"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_note", b"_note"]
    ) -> typing.Literal["note"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_portfolio", b"_portfolio"]
    ) -> typing.Literal["portfolio"] | None: ...
    @typing.overload
    def WhichOneof(
        self, oneof_group: typing.Literal["_security", b"_security"]
    ) -> typing.Literal["security"] | None: ...

global___PInvestmentPlan = PInvestmentPlan

@typing.final
class PTaxonomy(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Assignment(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        INVESTMENTVEHICLE_FIELD_NUMBER: builtins.int
        WEIGHT_FIELD_NUMBER: builtins.int
        RANK_FIELD_NUMBER: builtins.int
        DATA_FIELD_NUMBER: builtins.int
        investmentVehicle: builtins.str
        weight: builtins.int
        rank: builtins.int
        @property
        def data(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___PKeyValue
        ]: ...
        def __init__(
            self,
            *,
            investmentVehicle: builtins.str = ...,
            weight: builtins.int = ...,
            rank: builtins.int = ...,
            data: collections.abc.Iterable[global___PKeyValue] | None = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing.Literal[
                "data",
                b"data",
                "investmentVehicle",
                b"investmentVehicle",
                "rank",
                b"rank",
                "weight",
                b"weight",
            ],
        ) -> None: ...

    @typing.final
    class Classification(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        PARENTID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        NOTE_FIELD_NUMBER: builtins.int
        COLOR_FIELD_NUMBER: builtins.int
        WEIGHT_FIELD_NUMBER: builtins.int
        RANK_FIELD_NUMBER: builtins.int
        DATA_FIELD_NUMBER: builtins.int
        ASSIGNMENTS_FIELD_NUMBER: builtins.int
        id: builtins.str
        parentId: builtins.str
        name: builtins.str
        note: builtins.str
        color: builtins.str
        weight: builtins.int
        rank: builtins.int
        @property
        def data(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___PKeyValue
        ]: ...
        @property
        def assignments(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___PTaxonomy.Assignment
        ]: ...
        def __init__(
            self,
            *,
            id: builtins.str = ...,
            parentId: builtins.str | None = ...,
            name: builtins.str = ...,
            note: builtins.str | None = ...,
            color: builtins.str = ...,
            weight: builtins.int = ...,
            rank: builtins.int = ...,
            data: collections.abc.Iterable[global___PKeyValue] | None = ...,
            assignments: collections.abc.Iterable[global___PTaxonomy.Assignment]
            | None = ...,
        ) -> None: ...
        def HasField(
            self,
            field_name: typing.Literal[
                "_note",
                b"_note",
                "_parentId",
                b"_parentId",
                "note",
                b"note",
                "parentId",
                b"parentId",
            ],
        ) -> builtins.bool: ...
        def ClearField(
            self,
            field_name: typing.Literal[
                "_note",
                b"_note",
                "_parentId",
                b"_parentId",
                "assignments",
                b"assignments",
                "color",
                b"color",
                "data",
                b"data",
                "id",
                b"id",
                "name",
                b"name",
                "note",
                b"note",
                "parentId",
                b"parentId",
                "rank",
                b"rank",
                "weight",
                b"weight",
            ],
        ) -> None: ...
        @typing.overload
        def WhichOneof(
            self, oneof_group: typing.Literal["_note", b"_note"]
        ) -> typing.Literal["note"] | None: ...
        @typing.overload
        def WhichOneof(
            self, oneof_group: typing.Literal["_parentId", b"_parentId"]
        ) -> typing.Literal["parentId"] | None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    DIMENSIONS_FIELD_NUMBER: builtins.int
    CLASSIFICATIONS_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    source: builtins.str
    @property
    def dimensions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[
        builtins.str
    ]: ...
    @property
    def classifications(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PTaxonomy.Classification
    ]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        source: builtins.str | None = ...,
        dimensions: collections.abc.Iterable[builtins.str] | None = ...,
        classifications: collections.abc.Iterable[global___PTaxonomy.Classification]
        | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["_source", b"_source", "source", b"source"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_source",
            b"_source",
            "classifications",
            b"classifications",
            "dimensions",
            b"dimensions",
            "id",
            b"id",
            "name",
            b"name",
            "source",
            b"source",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["_source", b"_source"]
    ) -> typing.Literal["source"] | None: ...

global___PTaxonomy = PTaxonomy

@typing.final
class PDashboard(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Widget(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing.final
        class ConfigurationEntry(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            KEY_FIELD_NUMBER: builtins.int
            VALUE_FIELD_NUMBER: builtins.int
            key: builtins.str
            value: builtins.str
            def __init__(
                self,
                *,
                key: builtins.str = ...,
                value: builtins.str = ...,
            ) -> None: ...
            def ClearField(
                self, field_name: typing.Literal["key", b"key", "value", b"value"]
            ) -> None: ...

        TYPE_FIELD_NUMBER: builtins.int
        LABEL_FIELD_NUMBER: builtins.int
        CONFIGURATION_FIELD_NUMBER: builtins.int
        type: builtins.str
        label: builtins.str
        @property
        def configuration(
            self,
        ) -> google.protobuf.internal.containers.ScalarMap[
            builtins.str, builtins.str
        ]: ...
        def __init__(
            self,
            *,
            type: builtins.str = ...,
            label: builtins.str = ...,
            configuration: collections.abc.Mapping[builtins.str, builtins.str]
            | None = ...,
        ) -> None: ...
        def ClearField(
            self,
            field_name: typing.Literal[
                "configuration", b"configuration", "label", b"label", "type", b"type"
            ],
        ) -> None: ...

    @typing.final
    class Column(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        WEIGHT_FIELD_NUMBER: builtins.int
        WIDGETS_FIELD_NUMBER: builtins.int
        weight: builtins.int
        @property
        def widgets(
            self,
        ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
            global___PDashboard.Widget
        ]: ...
        def __init__(
            self,
            *,
            weight: builtins.int = ...,
            widgets: collections.abc.Iterable[global___PDashboard.Widget] | None = ...,
        ) -> None: ...
        def ClearField(
            self, field_name: typing.Literal["weight", b"weight", "widgets", b"widgets"]
        ) -> None: ...

    @typing.final
    class ConfigurationEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self, field_name: typing.Literal["key", b"key", "value", b"value"]
        ) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CONFIGURATION_FIELD_NUMBER: builtins.int
    COLUMNS_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    name: builtins.str
    id: builtins.str
    @property
    def configuration(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def columns(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PDashboard.Column
    ]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        configuration: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        columns: collections.abc.Iterable[global___PDashboard.Column] | None = ...,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "columns",
            b"columns",
            "configuration",
            b"configuration",
            "id",
            b"id",
            "name",
            b"name",
        ],
    ) -> None: ...

global___PDashboard = PDashboard

@typing.final
class PBookmark(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LABEL_FIELD_NUMBER: builtins.int
    PATTERN_FIELD_NUMBER: builtins.int
    label: builtins.str
    pattern: builtins.str
    def __init__(
        self,
        *,
        label: builtins.str = ...,
        pattern: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing.Literal["label", b"label", "pattern", b"pattern"]
    ) -> None: ...

global___PBookmark = PBookmark

@typing.final
class PAttributeType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    COLUMNLABEL_FIELD_NUMBER: builtins.int
    SOURCE_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    CONVERTERCLASS_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    columnLabel: builtins.str
    source: builtins.str
    target: builtins.str
    type: builtins.str
    converterClass: builtins.str
    @property
    def properties(self) -> global___PMap: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        columnLabel: builtins.str = ...,
        source: builtins.str | None = ...,
        target: builtins.str = ...,
        type: builtins.str = ...,
        converterClass: builtins.str = ...,
        properties: global___PMap | None = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing.Literal[
            "_source", b"_source", "properties", b"properties", "source", b"source"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "_source",
            b"_source",
            "columnLabel",
            b"columnLabel",
            "converterClass",
            b"converterClass",
            "id",
            b"id",
            "name",
            b"name",
            "properties",
            b"properties",
            "source",
            b"source",
            "target",
            b"target",
            "type",
            b"type",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing.Literal["_source", b"_source"]
    ) -> typing.Literal["source"] | None: ...

global___PAttributeType = PAttributeType

@typing.final
class PConfigurationSet(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    KEY_FIELD_NUMBER: builtins.int
    UUID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    key: builtins.str
    uuid: builtins.str
    name: builtins.str
    data: builtins.str
    def __init__(
        self,
        *,
        key: builtins.str = ...,
        uuid: builtins.str = ...,
        name: builtins.str = ...,
        data: builtins.str = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "data", b"data", "key", b"key", "name", b"name", "uuid", b"uuid"
        ],
    ) -> None: ...

global___PConfigurationSet = PConfigurationSet

@typing.final
class PSettings(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BOOKMARKS_FIELD_NUMBER: builtins.int
    ATTRIBUTETYPES_FIELD_NUMBER: builtins.int
    CONFIGURATIONSETS_FIELD_NUMBER: builtins.int
    @property
    def bookmarks(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PBookmark
    ]: ...
    @property
    def attributeTypes(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PAttributeType
    ]: ...
    @property
    def configurationSets(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PConfigurationSet
    ]: ...
    def __init__(
        self,
        *,
        bookmarks: collections.abc.Iterable[global___PBookmark] | None = ...,
        attributeTypes: collections.abc.Iterable[global___PAttributeType] | None = ...,
        configurationSets: collections.abc.Iterable[global___PConfigurationSet]
        | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "attributeTypes",
            b"attributeTypes",
            "bookmarks",
            b"bookmarks",
            "configurationSets",
            b"configurationSets",
        ],
    ) -> None: ...

global___PSettings = PSettings

@typing.final
class PClient(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class PropertiesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(
            self, field_name: typing.Literal["key", b"key", "value", b"value"]
        ) -> None: ...

    VERSION_FIELD_NUMBER: builtins.int
    SECURITIES_FIELD_NUMBER: builtins.int
    ACCOUNTS_FIELD_NUMBER: builtins.int
    PORTFOLIOS_FIELD_NUMBER: builtins.int
    TRANSACTIONS_FIELD_NUMBER: builtins.int
    PLANS_FIELD_NUMBER: builtins.int
    WATCHLISTS_FIELD_NUMBER: builtins.int
    TAXONOMIES_FIELD_NUMBER: builtins.int
    DASHBOARDS_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    BASECURRENCY_FIELD_NUMBER: builtins.int
    version: builtins.int
    baseCurrency: builtins.str
    @property
    def securities(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PSecurity
    ]: ...
    @property
    def accounts(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PAccount
    ]: ...
    @property
    def portfolios(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PPortfolio
    ]: ...
    @property
    def transactions(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PTransaction
    ]: ...
    @property
    def plans(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PInvestmentPlan
    ]: ...
    @property
    def watchlists(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PWatchlist
    ]: ...
    @property
    def taxonomies(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PTaxonomy
    ]: ...
    @property
    def dashboards(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PDashboard
    ]: ...
    @property
    def properties(
        self,
    ) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def settings(self) -> global___PSettings: ...
    def __init__(
        self,
        *,
        version: builtins.int = ...,
        securities: collections.abc.Iterable[global___PSecurity] | None = ...,
        accounts: collections.abc.Iterable[global___PAccount] | None = ...,
        portfolios: collections.abc.Iterable[global___PPortfolio] | None = ...,
        transactions: collections.abc.Iterable[global___PTransaction] | None = ...,
        plans: collections.abc.Iterable[global___PInvestmentPlan] | None = ...,
        watchlists: collections.abc.Iterable[global___PWatchlist] | None = ...,
        taxonomies: collections.abc.Iterable[global___PTaxonomy] | None = ...,
        dashboards: collections.abc.Iterable[global___PDashboard] | None = ...,
        properties: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        settings: global___PSettings | None = ...,
        baseCurrency: builtins.str = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["settings", b"settings"]
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "accounts",
            b"accounts",
            "baseCurrency",
            b"baseCurrency",
            "dashboards",
            b"dashboards",
            "plans",
            b"plans",
            "portfolios",
            b"portfolios",
            "properties",
            b"properties",
            "securities",
            b"securities",
            "settings",
            b"settings",
            "taxonomies",
            b"taxonomies",
            "transactions",
            b"transactions",
            "version",
            b"version",
            "watchlists",
            b"watchlists",
        ],
    ) -> None: ...

global___PClient = PClient

@typing.final
class PExchangeRate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATE_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    date: builtins.int
    @property
    def value(self) -> global___PDecimalValue: ...
    def __init__(
        self,
        *,
        date: builtins.int = ...,
        value: global___PDecimalValue | None = ...,
    ) -> None: ...
    def HasField(
        self, field_name: typing.Literal["value", b"value"]
    ) -> builtins.bool: ...
    def ClearField(
        self, field_name: typing.Literal["date", b"date", "value", b"value"]
    ) -> None: ...

global___PExchangeRate = PExchangeRate

@typing.final
class PExchangeRateTimeSeries(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASECURRENCY_FIELD_NUMBER: builtins.int
    TERMCURRENCY_FIELD_NUMBER: builtins.int
    EXCHANGERATES_FIELD_NUMBER: builtins.int
    baseCurrency: builtins.str
    termCurrency: builtins.str
    @property
    def exchangeRates(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PExchangeRate
    ]: ...
    def __init__(
        self,
        *,
        baseCurrency: builtins.str = ...,
        termCurrency: builtins.str = ...,
        exchangeRates: collections.abc.Iterable[global___PExchangeRate] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "baseCurrency",
            b"baseCurrency",
            "exchangeRates",
            b"exchangeRates",
            "termCurrency",
            b"termCurrency",
        ],
    ) -> None: ...

global___PExchangeRateTimeSeries = PExchangeRateTimeSeries

@typing.final
class PECBData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LASTMODIFIED_FIELD_NUMBER: builtins.int
    SERIES_FIELD_NUMBER: builtins.int
    lastModified: builtins.int
    @property
    def series(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___PExchangeRateTimeSeries
    ]: ...
    def __init__(
        self,
        *,
        lastModified: builtins.int = ...,
        series: collections.abc.Iterable[global___PExchangeRateTimeSeries] | None = ...,
    ) -> None: ...
    def ClearField(
        self,
        field_name: typing.Literal[
            "lastModified", b"lastModified", "series", b"series"
        ],
    ) -> None: ...

global___PECBData = PECBData
